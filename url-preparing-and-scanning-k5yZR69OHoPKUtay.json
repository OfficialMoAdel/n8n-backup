{"createdAt":"2024-12-27T16:30:26.328Z","updatedAt":"2024-12-27T16:30:26.328Z","id":"k5yZR69OHoPKUtay","name":"URL Preparing And Scanning","active":false,"nodes":[{"parameters":{"batchSize":1,"options":{}},"name":"Split In Batches","type":"n8n-nodes-base.splitInBatches","typeVersion":2,"position":[1660,580],"id":"0128fadf-b816-465f-a19b-d6b28695fb84"},{"parameters":{"content":"## URL META TAGS DATA\n**This part** is used to parse long link data like title, descraption, image all them served in header with tags called. [URL metadata](https://ogp.me/)","height":685.2594193361641,"width":1249.1706015670397},"name":"Sticky Note","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1600,980],"id":"4f01afa8-3a52-4da9-a528-45428e3e4041"},{"parameters":{"content":"## Switchy API Limits:\n- 10.000 links/day.\n- 1.000 links/hour max.\n- 16 links /minute max.","height":241.68171599985524,"width":346.4519761795601,"color":4},"name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[3760,1420],"id":"b61dab9d-54f3-4bf5-bd37-8ff91aa374cb"},{"parameters":{"url":"={{ $('API Auth').item.json.LongURL }}","options":{"allowUnauthorizedCerts":true,"redirect":{"redirect":{}},"response":{"response":{"fullResponse":true,"neverError":true}}}},"name":"Get Headers","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1680,1320],"id":"9132e124-64a5-4b25-8c8f-82a99a9e6f58","onError":"continueErrorOutput"},{"parameters":{"url":"=https://www.opengraph.xyz/api/metadata/{{ $('API Auth').item.json.LongURL.urlEncode()}}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:122.0) Gecko/20100101 Firefox/122.0"},{"name":"Accept","value":"*/*"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br"},{"name":"Referer","value":"=https://www.opengraph.xyz/url/{{ $('API Auth').item.json.LongURL.urlEncode()}}"},{"name":"DNT","value":"1"},{"name":"Connection","value":"keep-alive"},{"name":"Sec-Fetch-Dest","value":"empty"},{"name":"Sec-Fetch-Mode","value":"cors"},{"name":"Sec-Fetch-Site","value":"same-origin"},{"name":"Sec-GPC","value":"1"},{"name":"Pragma","value":"no-cache"},{"name":"Cache-Control","value":"no-cache"},{"name":"cookie","value":"crisp-client%2Fsession%2Fbb1ac897-aa52-4f90-b0e1-e191cb403caf=session_a7a69e83-51f6-4a3b-a101-68fc6d33aca7;"}]},"options":{"allowUnauthorizedCerts":true,"redirect":{"redirect":{}},"response":{"response":{"fullResponse":true,"neverError":true}}}},"name":"OpenGraph API","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1680,1120],"id":"8201ab08-df5f-46af-8a0b-27b3609e5905","onError":"continueErrorOutput"},{"parameters":{"url":"https://app.dub.co/api/edge/metatags","sendQuery":true,"queryParameters":{"parameters":[{"name":"url","value":"={{ $item(\"0\").$node[\"API Auth\"].json[\"LongURL\"] }}"}]},"sendHeaders":true,"headerParameters":{"parameters":[{"name":"authority","value":"app.dub.co"},{"name":"accept","value":"*/*"},{"name":"accept-language","value":"en-GB,en;q=0.9,en-US;q=0.8"},{"name":"cache-control","value":"no-cache"},{"name":"dnt","value":"1"},{"name":"pragma","value":"no-cache"},{"name":"sec-ch-ua","value":"\"Not_A Brand\";v=\"8\", \"Chromium\";v=\"120\", \"Microsoft Edge\";v=\"120\""},{"name":"sec-ch-ua-mobile","value":"?0"},{"name":"sec-ch-ua-platform","value":"\"Windows\""},{"name":"sec-fetch-dest","value":"empty"},{"name":"sec-fetch-mode","value":"cors"},{"name":"sec-fetch-site","value":"same-origin"},{"name":"user-agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0"}]},"options":{}},"name":"Meta tags Scraper - dub.sh","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1680,1500],"notesInFlow":true,"id":"2cb0d188-bb79-45dc-9021-397c3a695109","onError":"continueErrorOutput"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"b9f7d88d-4626-4e2c-a04c-ae8f9d4aed93","leftValue":"={{ $ifEmpty($json.data,'Unauthorized access') }}","rightValue":"Unauthorized access","operator":{"type":"string","operation":"notEquals"}},{"id":"046b5c40-b6a4-434e-aa8e-d3b6c601f16d","leftValue":"={{ $json.body.error }}","rightValue":"","operator":{"type":"string","operation":"notExists","singleValue":true}}],"combinator":"or"},"options":{}},"name":"IF OpenGraph invaild","type":"n8n-nodes-base.if","typeVersion":2,"position":[1920,1100],"id":"6121b31f-5b8f-4b90-aedf-cd401facf9ba"},{"parameters":{"operation":"extractHtmlContent","extractionValues":{"values":[{"key":"ogTitle","cssSelector":"meta[property^=\"og:title\"], meta[name=\"og:title\"], meta[property=\"twitter:title\"], meta[name=\"twitter:title\"]","returnValue":"attribute","attribute":"content"},{"key":"ogDescription","cssSelector":"meta[name=\"description\"], meta[property=\"og:description\"], meta[property=\"twitter:description\"]","returnValue":"attribute","attribute":"content"},{"key":"ogImage","cssSelector":"meta[property^=\"og:image\"], meta[name=\"og:image\"], meta[property=\"twitter:image\"], meta[name=\"twitter:image\"]","returnValue":"attribute","attribute":"content"},{"key":"favicon","cssSelector":"link[rel=\"shortcut icon\"], link[rel=\"icon\"], link[rel=\"apple-touch-icon\"], link[rel=\"apple-touch-startup-image\"]","returnValue":"attribute","attribute":"href"},{"key":"Image","cssSelector":"link[rel=\"preload\"][as=\"image\"],link[as=\"image\"]","returnValue":"attribute","attribute":"href"},{"key":"ogTitle","cssSelector":"title","returnValue":"html"}]},"options":{}},"name":"Parse headers","type":"n8n-nodes-base.html","typeVersion":1,"position":[1880,1297],"id":"58b421b0-f88f-43ea-8803-2d153deffce2"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"cfcdcf45-822e-4e7a-bd7f-5fb321f96acd","leftValue":"={{ ($if(\n  $('API Auth').item.json[\"OpenGraph Image Mode\"] = 'screenshot',\n  \"screenshot\")) }}","rightValue":"=screenshot","operator":{"type":"string","operation":"equals"}}],"combinator":"and"},"options":{}},"name":"If - Enable ScreenShots (yes to enable)","type":"n8n-nodes-base.if","typeVersion":2,"position":[2560,1277],"id":"3ae6be37-0bb8-4ba3-af5f-1e61808c42d3"},{"parameters":{"content":"# Screenshot stack","height":682.7545654243127,"width":885.4276629872791,"color":3},"name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[2860,980],"id":"8df22b7c-c95c-4df9-bb71-7054540685e3"},{"parameters":{"fields":{"values":[{"name":"OpenGraph Image Mode","stringValue":"={{ $json['What\\'s OG Image method you like ?'].toLowerCase() }}"},{"name":"Dark Mode ?","type":"booleanValue","booleanValue":"={{ $json['With your brand, Do you Like dark mode ?'].replace('no','false').replace('yes','true') }}"},{"name":"Brand Name","stringValue":"NodeMation"},{"name":"Switchy API Key","stringValue":"={{ $json['What\\'s your Switchy API Key'] }}"},{"name":"LongURL","stringValue":"={{ $json['What\\'s Your LongURL ?'].match(/\\b((?:https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*)/g)[0] }}"},{"name":"Scan LongURL","stringValue":"={{ $json['scan Long URLs from virus/Phishing ? (Shorting a phishing URL will ban your domain from SEO)'] }}"},{"name":"Custom slug","stringValue":"=<Optional: Slug is the path of shortened URL - default is random 5 chars> "},{"name":"tags","stringValue":"=<Optional: Add tags if you need, each keyword seperated by \",\" for example: Marketing, Media, Shortened> "},{"name":"Switchy Folder ID","stringValue":"<Optional: Enter Your Switchy Folder ID>"},{"name":"Custom Domain (CNAME)","stringValue":"=<Optional: Use your custom domain linked to Switchy, otherwise keep it empty to use default domain swiy.co>"}]},"include":"none","options":{}},"name":"API Auth","type":"n8n-nodes-base.set","typeVersion":3.2,"position":[2120,357],"id":"0fba1b3f-7b15-467f-9eef-b8f103c145af"},{"parameters":{"fields":{"values":[{"name":"ogTitle","stringValue":"={{\n      // We used IFempty of title then use descraption, if the title giving no title output value then replace with descraption value, if no value for both then use empty value output.\n      // The domain name (Host)\n      // if the image url not found then use long URL host.\n \n($ifEmpty($json[\"body\"][\"metadata\"][\"ogTitle\"], ($json[\"body\"][\"metadata\"][\"domain\"], $(\"API Auth\").item.json[\"LongURL\"])\n        // This Regex to delete Any https:// or path from the url.\n        .match(/https?:\\/\\/[^\\/]+/)[0]\n        .replace(/https?:\\/\\//, \"\")\n      ))\n }}"},{"name":"ogDescription","stringValue":"=  {{\n    // We used IFempty of descraption then use title, if the descraption giving no descraption output value then replace with title value, if no value for both then use empty value output.\n    $ifEmpty(\n      $json[\"body\"][\"metadata\"][\"ogDescription\"],\n      $json[\"body\"][\"metadata\"][\"ogSiteName\"]\n    ) || \"\"\n  }}"},{"name":"ogImage","stringValue":"={{\n  // Constructing the base URL for the CDN\n  \"https://ogcdn.net/6064b869-74ed-4eb9-b76c-0b701ffe7e6b/v4/\" +\n  // Adding the title, URL encoded\n  ($ifEmpty($json[\"body\"][\"metadata\"][\"ogTitle\"], $json[\"body\"][\"metadata\"][\"ogSiteName\"]).urlEncode() || \"\") +\n  \"/\" +\n  // Adding the description, URL encoded\n  ($ifEmpty($json[\"body\"][\"metadata\"][\"ogDescription\"], $json[\"body\"][\"metadata\"][\"ogTitle\"]).urlEncode() || \"\") +\n  \"/\" +\n  // Handling different OpenGraph Image Modes\n  (\n    $if($('API Auth').item.json[\"OpenGraph Image Mode\"] === 'screenshot',\n      \"<SCR>\",\n      $if($('API Auth').item.json[\"OpenGraph Image Mode\"] === 'brand',\n        (\n          \"https://cdn.statically.io/og/theme=\" +\n          ($item(\"0\").$node[\"API Auth\"].json[\"Dark Mode ?\"] + \"\")\n            .replace(\"false\", \"white/\")\n            .replace(\"true\", \"dark/\") +\n          (\n            (`%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20`+ $(\"API Auth\").item.json[\"Brand Name\"].slice(0,18) + '%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C') ||\n            $json[\"body\"][\"metadata\"][\"ogTitle\"].toUpperCase() ||\n            $json[\"body\"][\"metadata\"][\"ogDescription\"].toUpperCase() ||\n            \"Short Link\"\n          ) + '.jpg'\n        ).urlEncode(),\n        $ifEmpty(\n          $json[\"body\"][\"metadata\"][\"ogImage\"][\"url\"] || $json[\"body\"][\"metadata\"][\"image\"],\n          \"https://cdn.statically.io/og/theme=\" +\n            ($item(\"0\").$node[\"API Auth\"].json[\"Dark Mode ?\"] + \"\")\n              .replace(\"false\", \"white/\")\n              .replace(\"true\", \"dark/\") +\n            \"Default.jpg\"\n        ).urlEncode()\n      )\n    )\n  ) +\n  \"/og.png\"\n}}"},{"name":"Favicon","stringValue":"={{ $ifEmpty($json[\"body\"][\"metadata\"][\"favicon\"],\n(\n      // Get the Favicon url, if not available then generate api request to get it with:\n      \"https://favicone.com/\" +\n        // Get the image failed to export how from it if not found then use LongURL.\n        $ifEmpty(\n          $json[\"body\"][\"metadata\"][\"fullUrl\"],\n          $('API Auth').item.json[\"LongURL\"]\n        )\n          // This Regex to delete Any https:// or path from the url.\n          .match(/https?:\\/\\/[^\\/]+/)[0]\n          .replace(/https?:\\/\\//, \"\") +\n        // This Parameter to resize the favicon into 32pixels.\n        \"?s=32\"\n)) }}"}]},"include":"none","options":{}},"name":"Method 1 - META","type":"n8n-nodes-base.set","typeVersion":3.2,"position":[2140,1120],"id":"54936a51-bdb7-4865-a4a4-8216bb83ecf6"},{"parameters":{"operation":"toBinary","sourceProperty":"data","options":{"dataIsBase64":true}},"name":"Convert to File","type":"n8n-nodes-base.convertToFile","typeVersion":1,"position":[2960,1460],"id":"d94b32c8-6413-4ee8-934c-3ebd8472edfd"},{"parameters":{"fields":{"values":[{"name":"Title","stringValue":"={{ $item(\"0\").$node[\"Final Meta\"].json[\"data\"][\"0\"][\"ogTitle\"] }}"},{"name":"Description","stringValue":"={{ $item(\"0\").$node[\"Final Meta\"].json[\"data\"][\"0\"][\"ogDescription\"].replace(/\\s{2,}/g, ' ').replace(/^\\s+|\\s{3,}/g, '') }}"},{"name":"ogImage","stringValue":"={{ ($('Host OGImage').item.json[\"content\"][\"download_url\"]||'').replace('https://raw.githubusercontent.com/','https://cdn.statically.io/gh/')}}"},{"name":"Favicon","stringValue":"={{ ($item(\"0\").$node[\"Host Favicon\"].json[\"content\"][\"download_url\"]||'').replace('https://raw.githubusercontent.com/','https://cdn.statically.io/gh/')}}"},{"name":"=url","stringValue":"={{ $('API Auth').item.json.LongURL }}"},{"name":"slug","stringValue":"={{ $('API Auth').item.json[\"Custom slug\"] }}"},{"name":"tags","stringValue":"={{ $('API Auth').item.json.tags }}"},{"name":"folderId","stringValue":"={{ $('API Auth').item.json[\"Switchy Folder ID\"] }}"},{"name":"api","stringValue":"={{ $('API Auth').item.json[\"Switchy API Key\"] }}"},{"name":"name","stringValue":"={{ $('API Auth').item.json[\"Brand Name\"] }}"},{"name":"domain","stringValue":"={{ $('API Auth').item.json['Custom Domain (CNAME)'] }}"}]},"include":"none","options":{"ignoreConversionErrors":true,"dotNotation":true}},"name":"Final Data","type":"n8n-nodes-base.set","typeVersion":3.2,"position":[3500,1080],"id":"cdc222e6-9de5-4fcf-8250-5a7a1fa1ad47"},{"parameters":{"method":"POST","url":"https://api.switchy.io/v1/links/create","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Api-Authorization","value":"={{ $item(\"0\").$node[\"Final Data\"].json[\"api\"] }}"}]},"sendBody":true,"specifyBody":"json","jsonBody":"={  \"link\": {\n    \"url\": \"{{ $json[\"url\"] }}\",\n\n    {{($ifEmpty(('\"tags\": \"' + $json[\"tags\"]+'\",'),'')\n// Replace Undefiend with default one, and default template texts with none.\n.replace('\"tags\": \"undefined\",','')\n.replace('\"tags\": \"<Optional: Add tags if you need, each keyword seperated by \",\" for example: Marketing, Media, Shortened> \",','')\n) }}\n\n    {{($ifEmpty(('\"domain\": \"' + $json[\"domain\"]+'\",'),'')\n// Replace Undefiend with default one, and default template texts with none.\n.replace('\"undefined\",','\"swiy.co\",')\n.replace('\"<Optional: Use your custom domain linked to Switchy, otherwise keep it empty to use default domain swiy.co>\",','\"swiy.co\",')) }}\n\n    \"title\": \"{{$json[\"Title\"].slice(0,60)}}\",\n\n    {{($ifEmpty(('\"description\": \"' + $json[\"Description\"].slice(0,62)+'...\",'),'')\n.replace('\"description\": \"undefined\",','')) }}\n\n    {{($ifEmpty(('\"image\": \"' + $json[\"ogImage\"]+'\",'),'')\n.replace('\"image\": \"undefined\",','')) }}\n\n    \"id\": \"{{$ifEmpty($json[\"slug\"].replace('<Optional: Slug is the path of shortened URL - default is random 5 chars> ',''),Array.from({ length: 5 }, () => String.fromCharCode(Math.floor(Math.random() * 26) + 97)).join(''))}}\",\n\n    {{($ifEmpty(('\"folderId\": \"' + $json[\"folderId\"]+'\",'),'')\n.replace('\"folderId\": undefined,','')\n.replace('\"folderId\": \"<Optional: Enter Your Switchy Folder ID>\",','')) }}\n\n    \"favicon\": \"{{$json[\"Favicon\"]}}\",\n\n    \"note\": \"{{ 'Created through N8N.io Workflow name: ' + $workflow.name }}\"  }}","options":{"batching":{"batch":{"batchSize":15,"batchInterval":60000}},"allowUnauthorizedCerts":true,"redirect":{"redirect":{}},"response":{"response":{"fullResponse":true,"neverError":true}}}},"name":"CREATE","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[3800,1080],"alwaysOutputData":true,"notesInFlow":true,"id":"9b3bebd8-a8dc-4e7a-990b-795b0d79f8ea","notes":"Create Link"},{"parameters":{"method":"PUT","url":"=https://api.switchy.io/v1/links/by-domain/{{ $json.body.domain }}/{{ $json.body.id }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Api-Authorization","value":"={{ $item(\"0\").$node[\"Final Data\"].json[\"api\"] }}"}]},"sendBody":true,"specifyBody":"json","jsonBody":"={  \"link\": {\n    \"url\": \"{{ $item(\"0\").$node[\"Final Data\"].json[\"url\"] }}\",\n\n    {{($ifEmpty(('\"tags\": \"' + $json[\"tags\"]+'\",'),'')\n// Replace Undefiend with default one, and default template texts with none.\n.replace('\"tags\": \"undefined\",','')\n.replace('\"tags\": \"<Optional: Add tags if you need, each keyword seperated by \",\" for example: Marketing, Media, Shortened> \",','')\n) }}\n\n    {{($ifEmpty(('\"domain\": \"' + $json[\"domain\"]+'\",'),'')\n// Replace Undefiend with default one, and default template texts with none.\n.replace('\"undefined\",','\"swiy.co\",')\n.replace('\"<Optional: Use your custom domain linked to Switchy, otherwise keep it empty to use default domain swiy.co>\",','\"swiy.co\",')) }}\n\n    \"title\": \"{{ $item(\"0\").$node[\"Final Data\"].json[\"Title\"].slice(0,60) }}\",\n\n    {{($ifEmpty(('\"description\": \"' + $item(\"0\").$node[\"Final Data\"].json[\"Description\"].slice(0,62)+'...\",'),'')\n.replace('\"description\": \"undefined\",','')) }}\n\n    {{($ifEmpty(('\"image\": \"' + $json[\"ogImage\"]+'\",'),'')\n.replace('\"image\": \"undefined\",','')) }}\n\n    {{($ifEmpty(('\"folderId\": \"' + $json[\"folderId\"]+'\",'),'')\n.replace('\"folderId\": undefined,','')\n.replace('\"folderId\": \"<Optional: Enter Your Switchy Folder ID>\",','')) }}\n\n    \"favicon\": \"{{$item(\"0\").$node[\"Final Data\"].json[\"Favicon\"]}}\",\n\n    \"note\": \"{{ 'Created through N8N.io Workflow name: ' + $workflow.name }}\"  }}","options":{"batching":{"batch":{"batchSize":15,"batchInterval":60000}},"allowUnauthorizedCerts":true,"redirect":{"redirect":{}},"response":{"response":{"fullResponse":true,"neverError":true}}}},"name":"UPDATE","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[3800,1240],"alwaysOutputData":true,"id":"f93cf888-6abc-4b51-be6b-36c16f8f11d1"},{"parameters":{"content":"## Switchy API\n**Create or Update** Link. [Based on their API docs](https://google.com)","height":418.2992490141105,"width":344.6623616873581,"color":4},"name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[3760,980],"id":"8a676ae3-f6c6-49a8-a500-9629071292d8","disabled":true},{"parameters":{"conditions":{"string":[{"value1":"={{ $json.statusCode }}","operation":"regex","value2":"201"}]}},"name":"IF Slug available","type":"n8n-nodes-base.if","typeVersion":1,"position":[3940,1080],"id":"10139af0-3685-47db-9990-0e2ba8a68a83"},{"parameters":{"aggregate":"aggregateAllItemData","options":{"includeBinaries":true}},"name":"Final Meta","type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[2400,1277],"id":"a0a802f7-43d6-4652-91f4-fd08fdafbc18"},{"parameters":{"resource":"file","owner":{"__rl":true,"value":"ARHAEEM","mode":"list","cachedResultName":"ARHAEEM","cachedResultUrl":"https://github.com/ARHAEEM"},"repository":{"__rl":true,"value":"n8n-templates-demos","mode":"list","cachedResultName":"n8n-templates-demos","cachedResultUrl":"https://github.com/ARHAEEM/n8n-templates-demos"},"filePath":"=screenshots/{{$(\"API Auth\").item.json[\"LongURL\"].match(/https?:\\/\\/[^\\/]+/)[0].replace(/https?:\\/\\//, \"\")}}/scr/{{(Array.from({ length: 5 }, () => String.fromCharCode(Math.floor(Math.random() * 26) + 97)).join(''))}}.png","binaryData":true,"binaryPropertyName":"=data","commitMessage":"={{ $('API Auth').item.json.LongURL }}"},"name":"Host Screenshot","type":"n8n-nodes-base.github","typeVersion":1,"position":[3340,1080],"id":"8ec78a46-573a-4677-bff7-a1c3dd627a9c"},{"parameters":{"resource":"file","owner":{"__rl":true,"value":"ARHAEEM","mode":"list","cachedResultName":"ARHAEEM","cachedResultUrl":"https://github.com/ARHAEEM"},"repository":{"__rl":true,"value":"n8n-templates-demos","mode":"list","cachedResultName":"n8n-templates-demos","cachedResultUrl":"https://github.com/ARHAEEM/n8n-templates-demos"},"filePath":"=screenshots/{{$(\"API Auth\").item.json[\"LongURL\"].match(/https?:\\/\\/[^\\/]+/)[0].replace(/https?:\\/\\//, \"\")}}/og/{{(Array.from({ length: 5 }, () => String.fromCharCode(Math.floor(Math.random() * 26) + 97)).join(''))}}.png","binaryData":true,"binaryPropertyName":"=data","commitMessage":"={{ $('API Auth').item.json.LongURL }}"},"name":"Host OGImage","type":"n8n-nodes-base.github","typeVersion":1,"position":[3180,1420],"id":"c19d7395-f1ad-4ce9-8665-60fa63587f62"},{"parameters":{"resource":"file","owner":{"__rl":true,"value":"ARHAEEM","mode":"list","cachedResultName":"ARHAEEM","cachedResultUrl":"https://github.com/ARHAEEM"},"repository":{"__rl":true,"value":"n8n-templates-demos","mode":"list","cachedResultName":"n8n-templates-demos","cachedResultUrl":"https://github.com/ARHAEEM/n8n-templates-demos"},"filePath":"=screenshots/{{$(\"API Auth\").item.json[\"LongURL\"].match(/https?:\\/\\/[^\\/]+/)[0].replace(/https?:\\/\\//, \"\")}}/icon/{{(Array.from({ length: 5 }, () => String.fromCharCode(Math.floor(Math.random() * 26) + 97)).join(''))}}.png","binaryData":true,"binaryPropertyName":"=data","commitMessage":"={{ $('API Auth').item.json.LongURL }}"},"name":"Host Favicon","type":"n8n-nodes-base.github","typeVersion":1,"position":[3500,1420],"id":"c638b2c6-f538-4ab1-8eb7-8b72809620a1"},{"parameters":{"fields":{"values":[{"name":"download_url","stringValue":"={{ $json.content.download_url }}"}]},"options":{}},"name":"Edit Fields","type":"n8n-nodes-base.set","typeVersion":3.2,"position":[3340,1260],"id":"b022ddb0-5fbe-487c-8882-eaceb4d85770"},{"parameters":{"content":"# README\n## N8N META Config\n### 1- **Opengraph Image mode**: `screenshot` or `source` or `brand`\n### - **screenshot**: _take a screenshot for web page based on longurl._\n[![Screenshort Mode Demo](https://live.staticflickr.com/65535/53485029368_917acda850_o.png)](https://cdn.statically.io/gh/ARHAEEM/n8n-templates-demos/main/screenshots/n8n.io/og/mefwo.png)\n### - **source**: _scrape the source longurl og image and use it_\n[![Source Mode Demo](https://live.staticflickr.com/65535/53485194899_d6141292eb_o.png)](https://cdn.statically.io/gh/ARHAEEM/n8n-templates-demos/main/screenshots/n8n.io/og/cowyl.png)\n### -  **brand**: _Generate blank background, color based on `Dark Mode` option_\n[![Brand Mode Demo Dark](https://live.staticflickr.com/65535/53484898721_94e15670b0_o.png)](https://cdn.statically.io/gh/ARHAEEM/n8n-templates-demos/main/screenshots/n8n.io/og/gvhok.png) [![Brand Mode Demo White](https://live.staticflickr.com/65535/53485202839_680a5e825b_o.png)](https://cdn.statically.io/gh/ARHAEEM/n8n-templates-demos/main/screenshots/n8n.io/og/yguse.png)\n### 2- **Dark Mode**: `true` or `false` (_Working with `brand` OGI mode only._)\n- **true**: generate **black** patteren as background og image for the texts.\n- **false**: generate **white** patteren as background og image for the texts.\n### 3- **Brand Name**: Used for `brand` ogi background. The limit of brand name is 18 characters total.\n\n\n## Switchy API Workflow Configuration\n### This is part of Switchy API config i covered in this workflow.\n| Input Field           | Description                                      |\n|-----------------------|--------------------------------------------------|\n| **`Switchy API Key`**       | _API Key for Switchy integration._                 |\n| **`LongURL`**               | _The long URL to be shortened._                    |\n| **`Custom slug`**           | _Custom slug for the shortened URL._               |\n| **`tags`**                  | _Tags associated with the link._                   |\n| **`Switchy Folder ID`**     | _ID of the Switchy folder to use._                 |\n| **`Custom Domain (CNAME)`** | _Custom domain linked to Switchy._                 |\n\n\n### This is public APIs I've Used in Workflow\n#### Meta Data Stack\n- **Manual Get Headers**: Custom HTTP request to fetch headers.\n- **Dub.sh**: Scraping meta tags from web pages.\n- **OpenGraph API**: Using OpenGraph to retrieve meta information.\n#### Screenshot Stack\n- **Method 1 - SCR**: First method for taking screenshots (API name microlink).\n- **Method 2 - SCR**: Second method for taking screenshots (API name pxl.to).","height":1405.2214458171302,"width":682.2425599837106},"name":"Sticky Note6","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[900,257],"id":"591b8b83-368e-42b0-875d-ef8e744479b4"},{"parameters":{"url":"={{\n  // The expression checks if $json.data[0].data[0].ogImage exists.\n  // It then attempts to replace '<SCR>' with the encoded download URL.\n  // If $json.data[0].content.download_url does not exist or is empty,\n  // '<SCR>' is replaced with an empty string.\n  ($item(\"0\").$node[\"Final Meta\"].json[\"data\"][\"0\"][\"ogImage\"]).replace('<SCR>', \n    $ifEmpty(\n       $json[\"download_url\"], \n      (\n        // If the image URL or its components don't exist, construct a default image URL based on other JSON values\n        // Get the \"Dark Mode\" setting from the API Auth node\n        \"https://cdn.statically.io/og/theme=\" +\n          ($item(\"0\").$node[\"API Auth\"].json[\"Dark Mode ?\"] + \"\")\n            .replace(\"false\", \"white/\")\n            .replace(\"true\", \"dark/\")+\n          \".jpg\"\n      )\n    ).urlEncode()\n  )\n  }}","options":{"allowUnauthorizedCerts":true,"redirect":{"redirect":{}}}},"name":"Download final OG","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[3500,1260],"notesInFlow":true,"id":"a19a9bd6-7d37-41f6-90f3-f8b2aea1ddb3","notes":"Download Final OGI"},{"parameters":{"url":"={{ $item(\"0\").$node[\"Final Meta\"].json[\"data\"][\"0\"][\"Favicon\"] }}","options":{"allowUnauthorizedCerts":true,"redirect":{"redirect":{}}}},"name":"Download Favicon","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[3340,1420],"id":"6f81d856-1093-4043-b90f-dd9359115163"},{"parameters":{"fields":{"values":[{"name":"ogTitle","stringValue":"={{\n      // We used IFempty of title then use descraption, if the title giving no title output value then replace with descraption value, if no value for both then use empty value output.\n      // The domain name (Host)\n      // if the image url not found then use long URL host.\n \n($ifEmpty($json[\"ogTitle\"], ($(\"API Auth\").item.json[\"LongURL\"])\n        // This Regex to delete Any https:// or path from the url.\n        .match(/https?:\\/\\/[^\\/]+/)[0]\n        .replace(/https?:\\/\\//, \"\")\n      ))\n }}"},{"name":"ogDescription","stringValue":"={{ (($ifEmpty($json.ogDescription , $json[\"ogTitle\"])) || 'Visit Now') }}"},{"name":"ogImage","stringValue":"={{  // Constructing the base URL for the CDN\n  \"https://ogcdn.net/6064b869-74ed-4eb9-b76c-0b701ffe7e6b/v4/\" +\n  // Adding the title, URL encoded\n  ($ifEmpty($json[\"ogTitle\"], $('API Auth').item.json[\"Brand Name\"]).urlEncode() || \"\") +\n  \"/\" +\n  // Adding the description, URL encoded\n  ($ifEmpty($json[\"ogDescription\"], $json[\"ogTitle\"]).urlEncode() || \"\") +\n  \"/\" +\n  // Handling different OpenGraph Image Modes\n  (\n    $if($('API Auth').item.json[\"OpenGraph Image Mode\"] === 'screenshot',\n      \"<SCR>\",\n      $if($('API Auth').item.json[\"OpenGraph Image Mode\"] === 'brand',\n        (\n          \"https://cdn.statically.io/og/theme=\" +\n          ($item(\"0\").$node[\"API Auth\"].json[\"Dark Mode ?\"] + \"\")\n            .replace(\"false\", \"white/\")\n            .replace(\"true\", \"dark/\") +\n          (\n            (`%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20`+ $(\"API Auth\").item.json[\"Brand Name\"].slice||\n            $json[\"ogTitle\"].toUpperCase() ||\n            $json[\"ogDescription\"].toUpperCase() ||\n            \"Short Link\"\n          ) + '.jpg'\n        ).urlEncode(),\n        $ifEmpty(\n          $json[\"ogImage\"] || $json[\"Image\"],\n          \"https://cdn.statically.io/og/theme=\" +\n            ($item(\"0\").$node[\"API Auth\"].json[\"Dark Mode ?\"] + \"\")\n              .replace(\"false\", \"white/\")\n              .replace(\"true\", \"dark/\") +\n            \"Default.jpg\"\n        ).urlEncode()\n      )\n    )\n  ) +\n  \"/og.png\"\n}}"},{"name":"Favicon","stringValue":"={{ $ifEmpty($json[\"favicon\"],\n(\n// Get the Favicon url, if not available then generate api request to get it with:\n\"https://favicone.com/\" +\n// Get the image failed to export how from it if not found then use LongURL.\n$ifEmpty($('API Auth').item.json[\"LongURL\"],\n''\n)\n// This Regex to delete Any https:// or path from the url.\n.match(/https?:\\/\\/[^\\/]+/)[0]\n.replace(/https?:\\/\\//, \"\") +\n// This Parameter to resize the favicon into 32pixels.\n\"?s=32\"\n)) }}"}]},"include":"none","options":{}},"name":"Method 2 - META","type":"n8n-nodes-base.set","typeVersion":3.2,"position":[2020,1297],"id":"ad5198b7-495d-4d9f-9c42-3957d20b375d"},{"parameters":{"errorMessage":"META Stack need fix, report to creator through n8n community 'Ans'."},"name":"Stop and Error","type":"n8n-nodes-base.stopAndError","typeVersion":1,"position":[2560,1517],"id":"ee6cd8e3-2893-4841-8f25-038e65335f3f"},{"parameters":{"fields":{"values":[{"name":"ogTitle","stringValue":"={{\n      // We used IFempty of title then use descraption, if the title giving no title output value then replace with descraption value, if no value for both then use empty value output.\n      // The domain name (Host)\n      // if the image url not found then use long URL host.\n \n($ifEmpty($json[\"title\"], ($(\"API Auth\").item.json[\"LongURL\"])\n        // This Regex to delete Any https:// or path from the url.\n        .match(/https?:\\/\\/[^\\/]+/)[0]\n        .replace(/https?:\\/\\//, \"\")\n      ))\n }}"},{"name":"ogDescription","stringValue":"={{ (($ifEmpty($json.description , $json[\"title\"])) || 'Visit Now') }}"},{"name":"ogImage","stringValue":"={{  // Constructing the base URL for the CDN\n  \"https://ogcdn.net/6064b869-74ed-4eb9-b76c-0b701ffe7e6b/v4/\" +\n  // Adding the title, URL encoded\n  ($ifEmpty($json[\"title\"], $('API Auth').item.json[\"Brand Name\"]).urlEncode() || \"\") +\n  \"/\" +\n  // Adding the description, URL encoded\n  ($ifEmpty($json[\"description\"], $json[\"title\"]).urlEncode() || \"\") +\n  \"/\" +\n  // Handling different OpenGraph Image Modes\n  (\n    $if($('API Auth').item.json[\"OpenGraph Image Mode\"] === 'screenshot',\n      \"<SCR>\",\n      $if($('API Auth').item.json[\"OpenGraph Image Mode\"] === 'brand',\n        (\n          \"https://cdn.statically.io/og/theme=\" +\n          ($item(\"0\").$node[\"API Auth\"].json[\"Dark Mode ?\"] + \"\")\n            .replace(\"false\", \"white/\")\n            .replace(\"true\", \"dark/\") +\n          (\n            (`%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20`+ $(\"API Auth\").item.json[\"Brand Name\"].slice(0,18) + '%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C') ||\n            $json[\"title\"].toUpperCase() ||\n            $json[\"description\"].toUpperCase() ||\n            \"Short Link\"\n          ) + '.jpg'\n        ).urlEncode(),\n        $ifEmpty(\n          $json[\"image\"],\n          \"https://cdn.statically.io/og/theme=\" +\n            ($item(\"0\").$node[\"API Auth\"].json[\"Dark Mode ?\"] + \"\")\n              .replace(\"false\", \"white/\")\n              .replace(\"true\", \"dark/\") +\n            \"Default.jpg\"\n        ).urlEncode()\n      )\n    )\n  ) +\n  \"/og.png\"\n}}"},{"name":"Favicon","stringValue":"={{ $ifEmpty($json[\"favicon\"],\n(\n// Get the Favicon url, if not available then generate api request to get it with:\n\"https://favicone.com/\" +\n// Get the image failed to export how from it if not found then use LongURL.\n$ifEmpty($('API Auth').item.json[\"LongURL\"],\n''\n)\n// This Regex to delete Any https:// or path from the url.\n.match(/https?:\\/\\/[^\\/]+/)[0]\n.replace(/https?:\\/\\//, \"\") +\n// This Parameter to resize the favicon into 32pixels.\n\"?s=32\"\n)) }}"}]},"include":"none","options":{}},"name":"Method 3 - META1","type":"n8n-nodes-base.set","typeVersion":3.2,"position":[2140,1480],"id":"a7f81852-7b42-4e9a-b29a-3710b09fc838"},{"parameters":{"url":"https://api.switchy.io/v1/proxy/proxy","sendQuery":true,"queryParameters":{"parameters":[{"name":"url","value":"=https://api.microlink.io?url={{ $item(\"0\").$node[\"API Auth\"].json[\"LongURL\"].urlEncode() }}&screenshot=true&meta=true&embed=screenshot.url"}]},"sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:122.0) Gecko/20100101 Firefox/122.0"},{"name":"Accept","value":"application/json, text/plain, */*"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br"},{"name":"Origin","value":"https://www.switchy.io"},{"name":"DNT","value":"1"},{"name":"Connection","value":"keep-alive"},{"name":"Referer","value":"https://www.switchy.io/"},{"name":"Sec-Fetch-Dest","value":"empty"},{"name":"Sec-Fetch-Mode","value":"cors"},{"name":"Sec-Fetch-Site","value":"same-site"},{"name":"Sec-GPC","value":"1"},{"name":"Pragma","value":"no-cache"},{"name":"Cache-Control","value":"no-cache"},{"name":"TE","value":"trailers"}]},"options":{}},"name":"Method 1 - SCR","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[2960,1060],"notesInFlow":true,"id":"87b2c25a-3506-48c5-b7d4-ec28a9f2fbb2","onError":"continueErrorOutput","notes":"SCR API"},{"parameters":{"method":"POST","url":"https://app.pxl.to/api/public/tools/screenshot","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:122.0) Gecko/20100101 Firefox/122.0"},{"name":"Accept","value":"*/*"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br"},{"name":"Origin","value":"https://www.pxl.to"},{"name":"DNT","value":"1"},{"name":"Connection","value":"keep-alive"},{"name":"Sec-Fetch-Dest","value":"empty"},{"name":"Sec-Fetch-Mode","value":"cors"},{"name":"Sec-Fetch-Site","value":"same-site"},{"name":"Sec-GPC","value":"1"},{"name":"Pragma","value":"no-cache"},{"name":"Cache-Control","value":"no-cache"},{"name":"TE","value":"trailers"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"destination","value":"={{ $item(\"0\").$node[\"API Auth\"].json[\"LongURL\"] }}"},{"name":"size","value":"meta"},{"name":"width","value":1200},{"name":"height","value":628},{"name":"full","value":false}]},"options":{}},"name":"Method 2 - SCR","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[2960,1280],"notesInFlow":true,"id":"d3f27fe0-a302-4c1c-b7a6-ec83112bbfe5","onError":"continueErrorOutput","notes":"Optional "},{"parameters":{"aggregate":"aggregateAllItemData","options":{"includeBinaries":true}},"name":"Final SCR","type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[3180,1080],"id":"b78d034c-949c-4f53-92d0-2ee25cdccb9e"},{"parameters":{"errorMessage":"SCR Stack need fix, report to creator through n8n community 'Ans'."},"name":"Stop And Error","type":"n8n-nodes-base.stopAndError","typeVersion":1,"position":[3180,1260],"id":"de96a72c-b217-461e-bd37-28fcce0befe9"},{"parameters":{"keepOnlySet":true,"values":{"string":[{"name":"Shortened URL","value":"=https://{{ $json.body.domain }}/{{ $json.body.id }}"},{"name":"OG Method","value":"={{ $('API Auth').item.json['OpenGraph Image Mode'] }}"}]},"options":{}},"name":"Shortened URL","type":"n8n-nodes-base.set","typeVersion":2,"position":[3940,1240],"id":"49ae1604-b125-42a6-8e6b-da01f35b0c85"},{"parameters":{"path":"switchy","formTitle":"Switchy URL Shortener","formDescription":"This is demo simple of Switchy URL shortener.","formFields":{"values":[{"fieldLabel":"What's your Switchy API Key","fieldType":"textarea","requiredField":true},{"fieldLabel":"What's Your LongURL ?","requiredField":true},{"fieldLabel":"What's OG Image method you like ?","fieldType":"dropdown","fieldOptions":{"values":[{"option":"Screenshot"},{"option":"Source"},{"option":"brand"}]},"requiredField":true},{"fieldLabel":"With your brand, Do you Like dark mode ?","fieldType":"dropdown","fieldOptions":{"values":[{"option":"no"},{"option":"yes"}]},"requiredField":true},{"fieldLabel":"scan Long URLs from virus/Phishing ? (Shorting a phishing URL will ban your domain from SEO)","fieldType":"dropdown","fieldOptions":{"values":[{"option":"No, Skip Scan part."},{"option":"Yes, Scan all Links."}]},"requiredField":true}]},"responseMode":"responseNode","options":{}},"name":"n8n Form Trigger","type":"n8n-nodes-base.formTrigger","typeVersion":2,"position":[1660,380],"webhookId":"4d7636c2-aa25-4a90-8f9c-e421166d21ab","id":"4f7b2aa1-6d0b-48c0-9598-356d8e4df607"},{"parameters":{"respondWith":"text","responseBody":"={{ $json['Shortened URL'] }}","options":{}},"name":"Respond to Webhook","type":"n8n-nodes-base.respondToWebhook","typeVersion":1,"position":[1660,800],"id":"76946b5a-dfae-4142-bfaa-2b2feee34fa3"},{"parameters":{"content":"## URL Preparing And Scanning\n","height":698.8834639756606,"width":365.4663416508872},"name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1600,260],"id":"84b9af8a-f967-444a-b2cf-ec2a6b9a0af8"},{"parameters":{"url":"https://safeweb.norton.com/safeweb/sites/v1/details","sendQuery":true,"queryParameters":{"parameters":[{"name":"url","value":"={{ $('API Auth').item.json.LongURL.match(/^(?:https?:\\/\\/)?(?:[^@\\n]+@)?(?:www\\.)?([^:\\/\\n?]+)/im)[1] }}"},{"name":"insert","value":"0"}]},"sendHeaders":true,"headerParameters":{"parameters":[{"name":"Accept","value":"application/json, text/plain, */*"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br"},{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0"},{"name":"DNT","value":"1"},{"name":"Connection","value":"keep-alive"},{"name":"Referer","value":"https://safeweb.norton.com/"},{"name":"Sec-Fetch-Dest","value":"empty"},{"name":"Sec-Fetch-Mode","value":"cors"},{"name":"Sec-Fetch-Site","value":"same-origin"},{"name":"Sec-GPC","value":"1"},{"name":"Pragma","value":"no-cache"},{"name":"Cache-Control","value":"no-cache"},{"name":"Cache-Control","value":"no-cache"},{"name":"TE","value":"trailers"}]},"options":{"allowUnauthorizedCerts":true,"redirect":{"redirect":{}},"response":{"response":{}}}},"name":"Scan URL (Community)","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[2420,360],"id":"e0d447ed-4297-49db-a4ea-68f64d55830c"},{"parameters":{"content":"## URL Preparing\nWe're using this side to control everything.","height":698.8834639756606,"width":1102.2526655123636},"name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1980,260],"id":"b19386c1-f85b-40dd-aa01-7addc2b956a5"},{"parameters":{"content":"‌ ‌ ‌‌ ‌ ‌ ‌ ‌‌ ‌ ‌ ‌ ‌‌ ‌ ‌ ‌‌ ‌ ‌‌ ‌  ‌‌ ‌ ‌ ‌ ‌‌ ‌ ![Safe Web](https://static.nortoncdn.com/safeweb/prod/417315/assets/images/logo/norton_logo.svg)‌ ‌ ‌‌ ‌ ‌‌ ‌ ‌‌![Safe Web](https://static.nortoncdn.com/safeweb/prod/417315/assets/images/logo/safeweb_logo.svg) ‌ ‌‌ ‌ ‌‌ ‌ ‌‌![Safe Web](https://upload.wikimedia.org/wikipedia/commons/3/35/Bitdefender_logo.svg)","height":698.8834639756606,"width":732.5923943084913,"color":7},"name":"Sticky Note7","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[2360,260],"id":"7df97076-1149-40ea-acaf-00249554c43e"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"4b55880c-53dc-47d3-acc5-ecf5166bcce5","leftValue":"={{ $json.rating }}","rightValue":"g","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}},{"id":"c412970c-402b-4ae1-ad36-385ecc563d7a","leftValue":"={{ $json.rating }}","rightValue":"r","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"or"},"options":{}},"name":"If","type":"n8n-nodes-base.if","typeVersion":2,"position":[2580,357],"id":"9b694e20-42e5-4415-aec8-b5628c009aa4"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"4b55880c-53dc-47d3-acc5-ecf5166bcce5","leftValue":"={{ $('Scan URL (Community)').item.json.reviewCount }}","rightValue":1,"operator":{"type":"number","operation":"gte"}}],"combinator":"and"},"options":{}},"name":"If1","type":"n8n-nodes-base.if","typeVersion":2,"position":[2420,537],"id":"322d97d5-84c5-4a71-9d60-dbfed45d8b8e"},{"parameters":{"url":"=https://safeweb.norton.com/safeweb/sites/v1/{{ $('Scan URL (Community)').item.json.id }}/reviews","sendQuery":true,"queryParameters":{"parameters":[{"name":"sortType","value":"1"},{"name":"pageNo","value":"1"},{"name":"pageSize","value":"2"}]},"sendHeaders":true,"headerParameters":{"parameters":[{"name":"Accept","value":"application/json, text/plain, */*"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br"},{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0"},{"name":"DNT","value":"1"},{"name":"Connection","value":"keep-alive"},{"name":"Referer","value":"=https://safeweb.norton.com/report?url={{ $('Scan URL (Community)').item.json.url }}"},{"name":"Sec-Fetch-Dest","value":"empty"},{"name":"Sec-Fetch-Mode","value":"cors"},{"name":"Sec-Fetch-Site","value":"same-origin"},{"name":"Sec-GPC","value":"1"},{"name":"Pragma","value":"no-cache"},{"name":"Cache-Control","value":"no-cache"},{"name":"TE","value":"trailers"}]},"options":{"allowUnauthorizedCerts":true,"redirect":{"redirect":{}},"response":{"response":{}}}},"name":"Check Reviews (Community)","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[2420,717],"id":"b7922eec-cab8-4385-b151-8a75cd118441"},{"parameters":{"fields":{"values":[{"name":"Risk Rate","stringValue":"={{ $('Scan URL (Community)').item.json.rating }}"},{"name":"Community Rating","stringValue":"={{ $('Scan URL (Community)').item.json.userRating+'\\/5' }}"},{"name":"Ban","type":"booleanValue","booleanValue":"={{ $('Scan URL (Community)').item.json.globalRestriction }}"}]},"options":{}},"name":"Norton","type":"n8n-nodes-base.set","typeVersion":3.2,"position":[2580,537],"id":"909358c9-d3d4-4b8a-97a5-8310160a07e8"},{"parameters":{"fields":{"values":[{"name":"safe","type":"booleanValue","booleanValue":"={{ $json.safe.is }}"},{"name":"blocklist score","stringValue":"={{ $item(\"0\").$node[\"HTML\"].json[\"result\"] }}"}]},"options":{}},"name":"bitdefender","type":"n8n-nodes-base.set","typeVersion":3.2,"position":[2940,540],"id":"87542d70-25fd-4e93-a9d0-fd15b403b084"},{"parameters":{"operation":"extractHtmlContent","extractionValues":{"values":[{"key":"result","cssSelector":".label"}]},"options":{}},"name":"HTML","type":"n8n-nodes-base.html","typeVersion":1,"position":[2780,540],"id":"34ce976b-e8b2-4d1b-92be-fc0fa373c721"},{"parameters":{"method":"POST","url":"https://nimbus.bitdefender.net/url/fraud_info","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Accept","value":"*/*"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br"},{"name":"Referer","value":"https://trafficlight.bitdefender.com/"},{"name":"Origin","value":"https://trafficlight.bitdefender.com"},{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0"},{"name":"DNT","value":"1"},{"name":"Connection","value":"keep-alive"},{"name":"Sec-Fetch-Dest","value":"empty"},{"name":"Sec-Fetch-Mode","value":"cors"},{"name":"Sec-Fetch-Site","value":"cross-site"},{"name":"Sec-GPC","value":"1"},{"name":"Pragma","value":"no-cache"},{"name":"Cache-Control","value":"no-cache"},{"name":"TE","value":"trailers"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"url","value":"={{ $('API Auth').item.json.LongURL.match(/^(?:https?:\\/\\/)?(?:[^@\\n]+@)?(?:www\\.)?([^:\\/\\n?]+)/im)[1] }}"}]},"options":{"allowUnauthorizedCerts":true,"redirect":{"redirect":{}},"response":{"response":{}}}},"name":"(Fraud Check)","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[2780,360],"notesInFlow":true,"id":"668c9df4-ab10-4b91-8409-9bec3cef18e9","notes":"Bitdefender"},{"parameters":{"url":"=https://www.urlvoid.com/scan/{{ $('API Auth').item.json.LongURL.match(/^(?:https?:\\/\\/)?(?:[^@\\n]+@)?(?:www\\.)?([^:\\/\\n?]+)/im)[1] }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Accept","value":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Accept-Encoding","value":"gzip, deflate, br"},{"name":"Referer","value":"https://www.urlvoid.com/"},{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0"},{"name":"DNT","value":"1"},{"name":"Connection","value":"keep-alive"},{"name":"Upgrade-Insecure-Requests","value":"1"},{"name":"Sec-Fetch-Dest","value":"document"},{"name":"Sec-Fetch-Mode","value":"navigate"},{"name":"Sec-Fetch-Site","value":"same-origin"},{"name":"Sec-Fetch-User","value":"?1"},{"name":"Sec-GPC","value":"1"},{"name":"Pragma","value":"no-cache"},{"name":"Cache-Control","value":"no-cache"},{"name":"TE","value":"trailers"}]},"options":{"allowUnauthorizedCerts":true,"redirect":{"redirect":{}},"response":{"response":{}}}},"name":"(Others)","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[2940,360],"id":"d90223d5-5f74-4876-9f5c-c7f482e3ccbe"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose"},"conditions":[{"id":"c409582d-b8b3-409f-a7af-7dcccb6f6beb","leftValue":"={{ ($json.result.match(/.*\\//)[0].replace('/','')).toDecimalNumber() }}","rightValue":"=5","operator":{"type":"number","operation":"lte"}},{"id":"f27aa777-2b4e-4bb9-8d0b-0de58283cc01","leftValue":"={{ $('If').item.json.rating }}","rightValue":"g","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}},{"id":"cbf7378d-c023-4de4-897d-e8c2e14bc08b","leftValue":"={{ $('If').item.json.rating }}","rightValue":"r","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}},{"id":"b240a351-6b68-4eac-a19e-383c44bbf721","leftValue":"={{ $json.safe }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"or"},"options":{"looseTypeValidation":true}},"name":"If2","type":"n8n-nodes-base.if","typeVersion":2,"position":[2780,717],"id":"258b8c2d-9dc6-4439-898c-db972502904f"},{"parameters":{"fields":{"values":[{"name":"Shortened URL","stringValue":"=Unsafe / Skipped getting {{ $item(\"0\").$node[\"HTML\"].json[\"result\"] }}"}]},"options":{}},"name":"set unsafe","type":"n8n-nodes-base.set","typeVersion":3.2,"position":[2940,737],"id":"5a57e9c5-3356-4903-81f7-2884911d8814"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"4b55880c-53dc-47d3-acc5-ecf5166bcce5","leftValue":"={{ $json['Scan LongURL'] }}","rightValue":"Yes,","operator":{"type":"string","operation":"startsWith"}}],"combinator":"or"},"options":{}},"name":"If3","type":"n8n-nodes-base.if","typeVersion":2,"position":[2120,577],"id":"d5f2c432-e59a-410f-aae9-5080c1d74937"},{"parameters":{"url":"=https://checkurl.phishtank.com/checkurl/index.php?url={{ $('API Auth').item.json.LongURL.match(/^(?:https?:\\/\\/)?(?:[^@\\n]+@)?(?:www\\.)?([^:\\/\\n?]+)/im)[1] }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"User-Agent","value":"phishtank/anestooo"}]},"options":{"allowUnauthorizedCerts":true,"redirect":{"redirect":{}}}},"name":"PhishTank","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[2580,717],"id":"895659c4-c65f-4b27-a14d-8bb320eece28"},{"parameters":{"conditions":{"options":{"caseSensitive":false,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"3c8cc92c-7232-4e30-b06b-3d8a57d80303","leftValue":"={{ $json.ogTitle }}","rightValue":"","operator":{"type":"string","operation":"notExists","singleValue":true}},{"id":"14329807-37fc-4265-beac-fff5bc4dda23","leftValue":"={{ $json.ogDescription }}","rightValue":"","operator":{"type":"string","operation":"notExists","singleValue":true}},{"id":"355ab988-c784-4fc3-8991-f5b0ab4b732a","leftValue":"={{ $json.ogImage }}","rightValue":"","operator":{"type":"string","operation":"notExists","singleValue":true}},{"id":"1f85c367-6270-42c2-b109-0a66ece133dc","leftValue":"={{ $json.ogTitle + $json.ogDescription }}","rightValue":"Error","operator":{"type":"string","operation":"contains"}}],"combinator":"or"},"options":{"ignoreCase":true}},"name":"IF GH invaild","type":"n8n-nodes-base.if","typeVersion":2,"position":[2160,1297],"id":"ecb4d465-74af-4595-b6e2-41ece2b3f754"},{"parameters":{"fields":{"values":[{"name":"ogTitle","stringValue":"={{\n      // We used IFempty of title then use descraption, if the title giving no title output value then replace with descraption value, if no value for both then use empty value output.\n      // The domain name (Host)\n      // if the image url not found then use long URL host.\n \n($ifEmpty($json[\"title\"].replace('Error',$('API Auth').item.json[\"Brand Name\"].replaceAll('  ','')), ($(\"API Auth\").item.json[\"LongURL\"])\n        // This Regex to delete Any https:// or path from the url.\n        .match(/https?:\\/\\/[^\\/]+/)[0]\n        .replace(/https?:\\/\\//, \"\")\n      ))\n }}"},{"name":"ogDescription","stringValue":"={{ (($ifEmpty($json.description , $json[\"title\"])) || 'Visit Now') }}"},{"name":"ogImage","stringValue":"={{  // Constructing the base URL for the CDN\n  \"https://ogcdn.net/6064b869-74ed-4eb9-b76c-0b701ffe7e6b/v4/\" +\n  // Adding the title, URL encoded\n  ($ifEmpty($json[\"title\"].replace('Error',''), $('API Auth').item.json[\"Brand Name\"].replaceAll('  ','')).urlEncode() || \"\") +\n  \"/\" +\n  // Adding the description, URL encoded\n  ($ifEmpty($json[\"description\"].replace('No description',''), $json[\"title\"].replace('Error',$('API Auth').item.json[\"Brand Name\"].replaceAll('  ',''))).urlEncode() || \"\") +\n  \"/\" +\n  // Handling different OpenGraph Image Modes\n  (\n    $if($('API Auth').item.json[\"OpenGraph Image Mode\"] === 'screenshot',\n      \"<SCR>\",\n      $if($('API Auth').item.json[\"OpenGraph Image Mode\"] === 'brand',\n        (\n          \"https://cdn.statically.io/og/theme=\" +\n          ($item(\"0\").$node[\"API Auth\"].json[\"Dark Mode ?\"] + \"\")\n            .replace(\"false\", \"white/\")\n            .replace(\"true\", \"dark/\") +\n          (\n            (`%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20`+ $(\"API Auth\").item.json[\"Brand Name\"].slice||\n            $json[\"title\"].toUpperCase() ||\n            $json[\"description\"].toUpperCase() ||\n            \"Short Link\"\n          ) + '.jpg'\n        ).urlEncode(),\n        $ifEmpty(\n          $json[\"image\"],\n          \"https://cdn.statically.io/og/theme=\" +\n            ($item(\"0\").$node[\"API Auth\"].json[\"Dark Mode ?\"] + \"\")\n              .replace(\"false\", \"white/\")\n              .replace(\"true\", \"dark/\") +\n            \"Default.jpg\"\n        ).urlEncode()\n      )\n    )\n  ) +\n  \"/og.png\"\n}}"},{"name":"Favicon","stringValue":"={{ $ifEmpty($json[\"favicon\"],\n(\n// Get the Favicon url, if not available then generate api request to get it with:\n\"https://favicone.com/\" +\n// Get the image failed to export how from it if not found then use LongURL.\n$ifEmpty($('API Auth').item.json[\"LongURL\"],\n''\n)\n// This Regex to delete Any https:// or path from the url.\n.match(/https?:\\/\\/[^\\/]+/)[0]\n.replace(/https?:\\/\\//, \"\") +\n// This Parameter to resize the favicon into 32pixels.\n\"?s=32\"\n)) }}"}]},"include":"none","options":{}},"name":"Method 4 - META","type":"n8n-nodes-base.set","typeVersion":3.2,"position":[2360,1517],"id":"9e3dae80-09f1-4719-9b24-9e079ada81b7"},{"parameters":{"conditions":{"options":{"caseSensitive":false,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"3c8cc92c-7232-4e30-b06b-3d8a57d80303","leftValue":"={{ $json.title }}","rightValue":"No title","operator":{"type":"string","operation":"equals"}},{"id":"14329807-37fc-4265-beac-fff5bc4dda23","leftValue":"={{ $json.description }}","rightValue":"No description","operator":{"type":"string","operation":"equals"}},{"id":"355ab988-c784-4fc3-8991-f5b0ab4b732a","leftValue":"={{ $json.image }}","rightValue":"No image","operator":{"type":"string","operation":"equals"}},{"id":"1f85c367-6270-42c2-b109-0a66ece133dc","leftValue":"={{ $json.title + $json.description }}","rightValue":"Error","operator":{"type":"string","operation":"contains"}}],"combinator":"or"},"options":{"ignoreCase":true}},"name":"IF dub invaild","type":"n8n-nodes-base.if","typeVersion":2,"position":[1900,1497],"id":"82a1275e-c8d8-4d1a-b688-81d06f8506eb"},{"parameters":{"content":"\n\n\n\n‌\n‌\n‌\n‌\n‌\n# 💡FYI:-\n- ### **This workflow can be for any URL Shortener by just changing the API Services for the shortener SaaS.**\n- ### **Do not use it for spam purposes as the used APIs is mostly workaround methods and not for \"Big Use Cases\".**\n- ### **Breaking the APIs will force me to not share them free. and yes this workflow not for productions.**\n- ### **Support 1:1 not included with this workflow. post anything you have** [here](https://community.n8n.io) and mention my account @Nskha.\n- ### **Follow my new templates updates** [on telegram](https://nodemation.t.me).\n\n‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌[![N8N Creator Profile - Nskha](https://cdn.statically.io/gh/Automations-Project/n8n-templates/main/stats.min.svg)](https://n8n.io/creators/nskha)","height":700.251847890049,"width":1000.9922558475889},"name":"Sticky Note8","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[3100,257],"id":"e2640779-5f8b-4568-8a14-b6f08f5d3785"}],"connections":{"Split In Batches":{"main":[[{"node":"API Auth","type":"main","index":0}],[{"node":"Respond to Webhook","type":"main","index":0}]]},"Get Headers":{"main":[[{"node":"Parse headers","type":"main","index":0}],[{"node":"Meta tags Scraper - dub.sh","type":"main","index":0}]]},"OpenGraph API":{"main":[[{"node":"IF OpenGraph invaild","type":"main","index":0}],[{"node":"Get Headers","type":"main","index":0}]]},"Meta tags Scraper - dub.sh":{"main":[[{"node":"IF dub invaild","type":"main","index":0}],[{"node":"Stop and Error","type":"main","index":0}]]},"IF OpenGraph invaild":{"main":[[{"node":"Method 1 - META","type":"main","index":0}],[{"node":"Get Headers","type":"main","index":0}]]},"Parse headers":{"main":[[{"node":"Method 2 - META","type":"main","index":0}]]},"If - Enable ScreenShots (yes to enable)":{"main":[[{"node":"Method 1 - SCR","type":"main","index":0}],[{"node":"Edit Fields","type":"main","index":0}]]},"API Auth":{"main":[[{"node":"If3","type":"main","index":0}]]},"Method 1 - META":{"main":[[{"node":"Final Meta","type":"main","index":0}]]},"Convert to File":{"main":[[{"node":"Final SCR","type":"main","index":0}]]},"Final Data":{"main":[[{"node":"CREATE","type":"main","index":0}]]},"CREATE":{"main":[[{"node":"IF Slug available","type":"main","index":0}]]},"UPDATE":{"main":[[{"node":"Shortened URL","type":"main","index":0}]]},"IF Slug available":{"main":[[{"node":"Shortened URL","type":"main","index":0}],[{"node":"UPDATE","type":"main","index":0}]]},"Final Meta":{"main":[[{"node":"If - Enable ScreenShots (yes to enable)","type":"main","index":0}]]},"Host Screenshot":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Host OGImage":{"main":[[{"node":"Download Favicon","type":"main","index":0}]]},"Host Favicon":{"main":[[{"node":"Final Data","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"Download final OG","type":"main","index":0}]]},"Download final OG":{"main":[[{"node":"Host OGImage","type":"main","index":0}]]},"Download Favicon":{"main":[[{"node":"Host Favicon","type":"main","index":0}]]},"Method 2 - META":{"main":[[{"node":"IF GH invaild","type":"main","index":0}]]},"Method 3 - META1":{"main":[[{"node":"Final Meta","type":"main","index":0}]]},"Method 1 - SCR":{"main":[[{"node":"Final SCR","type":"main","index":0}],[{"node":"Method 2 - SCR","type":"main","index":0}]]},"Method 2 - SCR":{"main":[[{"node":"Convert to File","type":"main","index":0}],[{"node":"Stop And Error","type":"main","index":0}]]},"Final SCR":{"main":[[{"node":"Host Screenshot","type":"main","index":0}]]},"Shortened URL":{"main":[[{"node":"Split In Batches","type":"main","index":0}]]},"n8n Form Trigger":{"main":[[{"node":"Split In Batches","type":"main","index":0}]]},"Scan URL (Community)":{"main":[[{"node":"If","type":"main","index":0}]]},"If":{"main":[[{"node":"PhishTank","type":"main","index":0}],[{"node":"If1","type":"main","index":0}]]},"If1":{"main":[[{"node":"Check Reviews (Community)","type":"main","index":0}],[{"node":"Norton","type":"main","index":0}]]},"Check Reviews (Community)":{"main":[[{"node":"Norton","type":"main","index":0}]]},"Norton":{"main":[[{"node":"PhishTank","type":"main","index":0}]]},"bitdefender":{"main":[[{"node":"If2","type":"main","index":0}]]},"HTML":{"main":[[{"node":"bitdefender","type":"main","index":0}]]},"(Fraud Check)":{"main":[[{"node":"(Others)","type":"main","index":0}]]},"(Others)":{"main":[[{"node":"HTML","type":"main","index":0}]]},"If2":{"main":[[{"node":"OpenGraph API","type":"main","index":0}],[{"node":"set unsafe","type":"main","index":0}]]},"If3":{"main":[[{"node":"Scan URL (Community)","type":"main","index":0}],[{"node":"OpenGraph API","type":"main","index":0}]]},"PhishTank":{"main":[[{"node":"(Fraud Check)","type":"main","index":0}]]},"set unsafe":{"main":[[{"node":"Split In Batches","type":"main","index":0}]]},"IF GH invaild":{"main":[[{"node":"Meta tags Scraper - dub.sh","type":"main","index":0}],[{"node":"Final Meta","type":"main","index":0}]]},"IF dub invaild":{"main":[[{"node":"Method 4 - META","type":"main","index":0}],[{"node":"Method 3 - META1","type":"main","index":0}]]},"Method 4 - META":{"main":[[{"node":"Final Meta","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":null,"versionId":"82b1e6a8-5bfe-429e-b6ce-daa37262e6c0","triggerCount":0,"tags":[]}